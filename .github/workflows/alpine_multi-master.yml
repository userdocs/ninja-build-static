name: qemu ninja - latest master emulation

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [ninja]
        os_id: [alpine]
        os_version_id: [edge]
        arch: [i386, amd64, arm32v6, arm32v7, arm64v8, ppc64le, s390x]
        include:
          - arch: i386
            docker_arch: linux/i386
          - arch: amd64
            docker_arch: linux/amd64
          - arch: arm32v6
            docker_arch: linux/arm/v6
          - arch: arm32v7
            docker_arch: linux/arm/v7
          - arch: arm64v8
            docker_arch: linux/arm64
          - arch: ppc64le
            docker_arch: linux/ppc64le
          - arch: s390x
            docker_arch: linux/s390x

    name: ${{ matrix.name }} ${{ matrix.os_id }}:${{ matrix.os_version_id }} ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v3

      - name: Docker multiarch bootstrap
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create docker multiarch ${{ matrix.docker_arch }} container
        run: docker run --name multiarch -it -d -e LDFLAGS="-s -static --static" -w /root --platform ${{ matrix.docker_arch }} -v ${{ github.workspace }}:/root ${{ matrix.arch }}/${{ matrix.os_id }}:${{ matrix.os_version_id }}

      - name: Run apk update
        run: docker exec multiarch apk update --repository="${{ env.CDN }}"

      - name: Run apk upgrade
        run: docker exec multiarch apk upgrade --repository="${{ env.CDN }}"

      - name: Run apk to install the core build dependencies
        run: docker exec multiarch apk add build-base git curl linux-headers cmake re2c

      - name: Host - Set Master Git Tag
        run: echo "ninja_github_tag=$(curl -sL "https://raw.githubusercontent.com/ninja-build/ninja/master/src/version.cc" | sed -rn 's|const char\* kNinjaVersion = "(.*)";|\1|p' | sed 's/\.git//g')" >> $GITHUB_ENV

      - name: Host - Git clone ${{ matrix.name }}
        run: git clone --no-tags --single-branch --branch master --depth=1 "https://github.com/ninja-build/ninja.git" "${{ matrix.name }}"

      - name: Configure ${{ matrix.name }}
        run: >
          docker exec -w /root/${{ matrix.name }} multiarch cmake -B build
          -D CMAKE_BUILD_TYPE="release"
          -D CMAKE_CXX_STANDARD="17"
          -D CMAKE_INSTALL_PREFIX="/root"

      - name: Cmake Build ${{ matrix.name }}
        run: docker exec -w /root/${{ matrix.name }} multiarch cmake --build build

      - name: Cmake Install ${{ matrix.name }}
        run: docker exec -w /root/${{ matrix.name }} multiarch cmake --install build

      - name: Rename ${{ matrix.name }} to ${{ matrix.name }}-${{ matrix.arch }}
        run: docker exec multiarch mv -f /root/bin/${{ matrix.name }} /root/bin/${{ matrix.name }}-${{ matrix.arch }}

      - name: "Create release"
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          artifacts: bin/${{ matrix.name }}-${{ matrix.arch }}
          replacesArtifacts: true
          tag: ${{ env.ninja_github_tag }}
          name: ${{ matrix.name }} ${{ env.ninja_github_tag }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
